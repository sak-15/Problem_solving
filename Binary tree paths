# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def binaryTreePaths(self, root: Optional[TreeNode]) -> List[str]:
        
        def DFS(node, path):
            if node.left is None and node.right is None:
                paths.append(path)
            else:
                if node.left is not None:
                    DFS(node.left, path+"->"+str(node.left.val))
                if node.right is not None:
                    DFS(node.right, path+"->"+str(node.right.val))
                    
        paths = []
        if root is not None:
            DFS(root, str(root.val))
        return paths
