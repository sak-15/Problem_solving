# TC- O(logmn)
# SC- o(1)

class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        if not matrix or not matrix[0]:
            return False
        
        row,col=len(matrix),len(matrix[0])
        low,high=0,row*col-1
        while low<=high:
            mid=(low+high)//2
            loc=matrix[mid//col][mid%col]
            
            if loc==target:
                return True
            if target>loc:
                low=mid+1
            else:
                high=mid-1
        return False
        
# TC- O(m+n)
# SC-O(1)
class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        i=0
        j=len(matrix[0])-1
        
        while i<len(matrix) and j>=0:
            if matrix[i][j]==target:
                return True
            if target<matrix[i][j]:
                j-=1
            else:
                i+=1
        return False
        
# TC-O(m*n)
# SC-O(1)
class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        for i in range(len(matrix)):
            for j in range(len(matrix[0])):
                if matrix[i][j]==target:
                    return True
        return False
