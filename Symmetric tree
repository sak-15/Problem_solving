# TC-O(N)
# SC-O(1)

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -> bool:
        if root is None:
            return True
        else:
            return self.mirror(root.left,root.right)
        
    def mirror(self,left,right):
        if left==None and right==None:
            return True
        if left==None or right==None:
            return False
        if left.val==right.val:
            x=self.mirror(left.left,right.right)
            y=self.mirror(left.right,right.left)
            return x and y
        else:
            return False
